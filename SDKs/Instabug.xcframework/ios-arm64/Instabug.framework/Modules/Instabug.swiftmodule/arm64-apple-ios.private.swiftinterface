// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Instabug
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import Instabug
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) final public class InstabugSwiftUIViewController : UIKit.UIViewController {
  @objc @_Concurrency.MainActor(unsafe) final public var viewName: Swift.String?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@available(iOS 13.0, tvOS 13.0, *)
extension SwiftUI.View {
  public func instabugTracedView(name: Swift.String) -> some SwiftUI.View
  
}
@available(iOS 13.0, tvOS 13.0, *)
public struct InstabugTracedView<Content> : SwiftUI.View where Content : SwiftUI.View {
  public init(name: Swift.String, @SwiftUI.ViewBuilder content: () -> Content)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8Instabug0A10TracedViewV4bodyQrvp", 0) __<Content>
}
@available(iOS 13.0, tvOS 13.0, *)
extension SwiftUI.View {
  public func instabug_privateView() -> some SwiftUI.View
  
}
@available(iOS 13.0, tvOS 13.0, *)
public struct InstabugPrivateView<Content> : SwiftUI.View where Content : SwiftUI.View {
  public init(@SwiftUI.ViewBuilder content: () -> Content)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8Instabug0A11PrivateViewV4bodyQrvp", 0) __<Content>
}
